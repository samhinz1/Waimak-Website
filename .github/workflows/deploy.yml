name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
      - name: Prepare static files
        run: |
          python -c "
          import os
          import re
          
          # Create output directory
          os.makedirs('_site', exist_ok=True)
          os.makedirs('_site/static', exist_ok=True)
          
          # Copy static files
          os.system('cp -r public_html/static/* _site/static/')
          
          # Fix paths in CSS files
          for root, dirs, files in os.walk('_site/static'):
              for file in files:
                  if file.endswith('.css'):
                      css_path = os.path.join(root, file)
                      with open(css_path, 'r', encoding='utf-8') as f:
                          content = f.read()
                      content = content.replace('\'/static/', '\'/Waimak-Website/static/')
                      with open(css_path, 'w', encoding='utf-8') as f:
                          f.write(content)
          
          # Read navbar content
          with open('templates/navbar.html', 'r', encoding='utf-8') as f:
              navbar_content = f.read()
          
          def process_template(template_path, output_path):
              with open(template_path, 'r', encoding='utf-8') as f:
                  content = f.read()
              
              # Replace include statement with navbar content
              content = content.replace('{% include \'navbar.html\' %}', navbar_content)
              
              # Fix static file paths
              content = content.replace('\"/static/', '\"/Waimak-Website/static/')
              
              # Create directory if needed
              os.makedirs(os.path.dirname(output_path), exist_ok=True)
              
              # Write the processed file
              with open(output_path, 'w', encoding='utf-8') as f:
                  f.write(content)
          
          # Process home page
          process_template('templates/home.html', '_site/index.html')
          
          # Process other pages
          pages = ['about', 'approach', 'contact', 'partners', 'faq']
          for page in pages:
              process_template(f'templates/{page}.html', f'_site/{page}/index.html')
          "
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 